[{"title":"Java文档注释","uid":"c89fcf3f80f5323c4d2b7488e0aabc7d","slug":"Java文档注释","date":"2022-06-07T10:30:06.000Z","updated":"2022-06-07T13:28:57.569Z","comments":true,"path":"api/articles/Java文档注释.json","cover":null,"text":"引言 Java 支持三种注释方式。前两种分别是 // 和 /* /，第三种被称作说明注释，它以 /* 开始，以 */结束。说明注释允许你在程序中嵌入关于程序的信息。你可以使用 javadoc 工具软件来生成信息，并输出到HTML文件中。说明注释，使你更加方便的记录你的程序信息。 ...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"java","slug":"java","count":3,"path":"api/categories/java.json"},{"name":"注释","slug":"java/注释","count":1,"path":"api/categories/java/注释.json"}],"tags":[{"name":"java","slug":"java","count":3,"path":"api/tags/java.json"},{"name":"注释","slug":"注释","count":1,"path":"api/tags/注释.json"}],"author":{"name":"如峰","slug":"blog-author","avatar":"/logo/logo.jpg","link":"/","description":"程序员的秃头会迟到,但永远不会缺席","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/fgbts"}}}},"feature":true},{"title":"Java Stream 流式编程","uid":"21734e1cbf39a356733db81c004c61e6","slug":"Java Stream 流式编程","date":"2022-06-06T07:30:06.000Z","updated":"2022-06-07T10:23:32.433Z","comments":true,"path":"api/articles/Java Stream 流式编程.json","cover":[],"text":"引言 流是Java API的新成员，它允许你以声明性方式处理数据集合（通过查询语句来表达，而不是临时编写一个实现）。就现在来说，你可以把它们看成遍历数据集的高级迭代器。此外，流还可以透明地并行处理，你无需写任何多线程代码了！ 流创建 通过集合 &#x2F;&#x2F; 创建一个集...","link":"","photos":[],"count_time":{"symbolsCount":"9.2k","symbolsTime":"8 mins."},"categories":[{"name":"java","slug":"java","count":3,"path":"api/categories/java.json"},{"name":"Stream","slug":"java/Stream","count":1,"path":"api/categories/java/Stream.json"},{"name":"流式编程","slug":"java/Stream/流式编程","count":1,"path":"api/categories/java/Stream/流式编程.json"}],"tags":[{"name":"java","slug":"java","count":3,"path":"api/tags/java.json"},{"name":"Stream","slug":"Stream","count":1,"path":"api/tags/Stream.json"}],"author":{"name":"如峰","slug":"blog-author","avatar":"/logo/logo.jpg","link":"/","description":"程序员的秃头会迟到,但永远不会缺席","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/fgbts"}}}},"feature":true},{"title":"Java函数式编程","uid":"2b987db277ec8f53b5baaa150ea429a6","slug":"Java函数式编程","date":"2022-05-31T13:30:06.000Z","updated":"2022-06-07T13:07:33.283Z","comments":true,"path":"api/articles/Java函数式编程.json","cover":null,"text":"引言 什么是函数式编程，即可以把方法当做参数或者返回值传递或引用。在JavaScript中函数式编程已经很常见，但是Java Function是不能作为参数引用，为此Java 8中提出了三个概念 Lambda 表达式，也可以称为闭包，但我更愿意称为定义函数的简写表达式 方法引用，...","link":"","photos":[],"count_time":{"symbolsCount":"8.8k","symbolsTime":"8 mins."},"categories":[{"name":"java","slug":"java","count":3,"path":"api/categories/java.json"},{"name":"函数式编程","slug":"java/函数式编程","count":1,"path":"api/categories/java/函数式编程.json"}],"tags":[{"name":"java","slug":"java","count":3,"path":"api/tags/java.json"},{"name":"函数式编程","slug":"函数式编程","count":1,"path":"api/tags/函数式编程.json"}],"author":{"name":"如峰","slug":"blog-author","avatar":"/logo/logo.jpg","link":"/","description":"程序员的秃头会迟到,但永远不会缺席","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/fgbts"}}}},"feature":true}]