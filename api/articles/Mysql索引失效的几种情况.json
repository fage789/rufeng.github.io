{"title":"Mysql索引失效的几种情况","uid":"44c25000734936b0a1dbcbaacbd8e114","slug":"Mysql索引失效的几种情况","date":"2022-06-14T03:30:06.000Z","updated":"2022-06-14T05:41:13.833Z","comments":true,"path":"api/articles/Mysql索引失效的几种情况.json","keywords":null,"cover":null,"content":"<h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>索引在我们使用<code>Mysql</code>数据库时可以极大的提高效率，然而有时候因为使用上的问题导致索引失效。现在我们看看有哪几种情况索引失效。</p>\n<h2 id=\"转换索引\"><a href=\"#转换索引\" class=\"headerlink\" title=\"转换索引\"></a>转换索引</h2><h3 id=\"数据类型不一致\"><a href=\"#数据类型不一致\" class=\"headerlink\" title=\"数据类型不一致\"></a>数据类型不一致</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">SELECT * FROM user WHERE height&#x3D; 180; &#x2F;&#x2F; 其中height是varchar类型</code></pre>\n<p>因为<code>height</code>是<code>varchar</code>类型，而<code>where</code>条件<code>180</code>是<code>Number</code>类型，数据类型不一致，索引失效。</p>\n<h3 id=\"数据的字符集不一致\"><a href=\"#数据的字符集不一致\" class=\"headerlink\" title=\"数据的字符集不一致\"></a>数据的字符集不一致</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">SELECT * FROM oc_order oo join orders_detail od ON oo.order_id &#x3D; od.order_id; &#x2F;&#x2F; 其中oo.order_id是utf8mb4, od.order_id是utf8字符集</code></pre>\n<p>因为<code>oo.order_id</code>与<code>od.order_id</code>，使用的字符集不一致，索引失效。</p>\n<h3 id=\"索引使用函数\"><a href=\"#索引使用函数\" class=\"headerlink\" title=\"索引使用函数\"></a>索引使用函数</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">SELECT * FROM user WHERE DATE(create_time) &#x3D; &#39;2020-09-03&#39;; &#x2F;&#x2F; create_time是索引字段</code></pre>\n<p>对索引字段<code>create_time</code>使用了<code>DATE()</code>函数，导致索引失效</p>\n<h3 id=\"索引使用了表达式计算\"><a href=\"#索引使用了表达式计算\" class=\"headerlink\" title=\"索引使用了表达式计算\"></a>索引使用了表达式计算</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">SELECT * FROM user WHERE age - 1 &#x3D; 20;</code></pre>\n<p>对索引字段<code>age</code>使用了<code>-</code>法运算，导致索引失效</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>总结</strong><br>其中<strong>索引使用了函数、表达式计算，对索引做了转换，</strong>导致索引的排序失效而不走索引，其中<strong>字符集不一致、类型不一致，导致<code>Mysql</code>做了隐式转换，</strong>导致索引的排序失效而不走索引</p></blockquote>\n<h2 id=\"索引使用了不等于判断\"><a href=\"#索引使用了不等于判断\" class=\"headerlink\" title=\"索引使用了不等于判断\"></a>索引使用了不等于判断</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">select num from student where student_id &lt;&gt; 10 ;       &#x2F;&#x2F; 不走索引\n\nselect num from student where student_id !&#x3D; 10 ;       &#x2F;&#x2F; 不走索引\n\nselect num from student where student_id is not Null ; &#x2F;&#x2F; 不走索引\n\nselect num from student where student_id is Null ;     &#x2F;&#x2F; 走索引</code></pre>\n<p>其中<code>&lt;&gt;</code>、<code>!=</code> 的不相等判断时，<code>B+树</code>查找不等于时，只能一个个查找进行判断，而 <code>is not Null</code>是不等于<code>Null</code>所以不走索引，而<code>is Null</code>是等于<code>Null</code>所以走索引</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>不相等判断B+树必须全表扫描导致索引失效</p></blockquote>\n<h2 id=\"违反最左原则\"><a href=\"#违反最左原则\" class=\"headerlink\" title=\"违反最左原则\"></a>违反最左原则</h2><p>最左前缀原则：</p>\n<ol>\n<li>即如果你创建一个联合索引, 那 这个索引的任何前缀都会用于查询, <code>(col1, col2, col3)</code>这个联合索引的所有前缀 就是<code>(col1)</code>, <code>(col1, col2)</code>, <code>(col1, col2, col3)</code>, 包含这些列的查询都会启用索 引查询.</li>\n<li>其他所有不在最左前缀里的列都不会启用索引, 即使包含了联合索引里的部分列 也不行. 即上述中的<code>(col2)</code>, <code>(col3)</code>, <code>(col2, col3)</code>都不会启用索引去查询.</li>\n</ol>\n<h3 id=\"order-By\"><a href=\"#order-By\" class=\"headerlink\" title=\"order By\"></a>order By</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">select * from user where name &#x3D; &#39;zhangsan&#39; and age &#x3D; 20 order by age,pos; &#x2F;&#x2F; 其中(age,pos)为联合索引, 走索引\n\nselect name,age from user where name &#x3D; &#39;zhangsan&#39; order by pos;          &#x2F;&#x2F; 违反最左前缀原则, 不走索引\n</code></pre>\n<p>违反最左前缀法则，不仅索引失效，而且导致额外的文件排序（会降低性能）。</p>\n<h3 id=\"group-By\"><a href=\"#group-By\" class=\"headerlink\" title=\"group By\"></a>group By</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">select * from user where name &#x3D; &#39;zhangsan&#39; and age &#x3D; 20 order by age,pos; &#x2F;&#x2F; 其中(age,pos)为联合索引, 走索引\n\nselect name,age from user where name &#x3D; &#39;zhangsan&#39; order by pos;           &#x2F;&#x2F; 违反最左前缀原则, 不走索引</code></pre>\n<p>违反最左前缀法则，不仅索引失效，而且导致产生临时表（会降低性能）。</p>\n<h3 id=\"like\"><a href=\"#like\" class=\"headerlink\" title=\"like\"></a>like</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">select id,address from t_user where address like &#39;%海淀区%&#39;; &#x2F;&#x2F; 不走索引\nselect id,address from t_user where address like &#39;海淀区%&#39;;  &#x2F;&#x2F; 走索引\nselect id,address from t_user where address like &#39;%海淀区&#39;;  &#x2F;&#x2F; 不走索引</code></pre>\n<p><code>%</code>在字段的左边则会不符合最左原则，导致索引失效</p>\n<h3 id=\"or\"><a href=\"#or\" class=\"headerlink\" title=\"or\"></a>or</h3><pre><code class=\"lang-java\">select * from user where name = &#39;zhangsan&#39; or age = 20; // 其中age不是索引\n`\n</code></pre>\n<p>如果or要使用索引，必须<code>or</code>左右两边都是索引字段。当然如果<code>or</code>左右两边都是索引字段，但是<code>Mysql</code>判断走全表扫描快也不会走索引。</p>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">注意</p>\n<p><p>当Mysql判断全表扫表比走索引快时索引也会失效</p>\n</p>\n</div>\n","text":"引言索引在我们使用Mysql数据库时可以极大的提高效率，然而有时候因为使用上的问题导致索引失效。现在我们看看有哪几种情况索引失效。 转换索引数据类型不一致SELECT * FROM user WHERE height&#x3D; 180; &#x2F;&#x2F; 其中heigh...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"Mysql","slug":"Mysql","count":2,"path":"api/categories/Mysql.json"}],"tags":[{"name":"MySQL","slug":"MySQL","count":2,"path":"api/tags/MySQL.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BC%95%E8%A8%80\"><span class=\"toc-text\">引言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BD%AC%E6%8D%A2%E7%B4%A2%E5%BC%95\"><span class=\"toc-text\">转换索引</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B8%8D%E4%B8%80%E8%87%B4\"><span class=\"toc-text\">数据类型不一致</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E7%9A%84%E5%AD%97%E7%AC%A6%E9%9B%86%E4%B8%8D%E4%B8%80%E8%87%B4\"><span class=\"toc-text\">数据的字符集不一致</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%B4%A2%E5%BC%95%E4%BD%BF%E7%94%A8%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">索引使用函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%B4%A2%E5%BC%95%E4%BD%BF%E7%94%A8%E4%BA%86%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AE%A1%E7%AE%97\"><span class=\"toc-text\">索引使用了表达式计算</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%B4%A2%E5%BC%95%E4%BD%BF%E7%94%A8%E4%BA%86%E4%B8%8D%E7%AD%89%E4%BA%8E%E5%88%A4%E6%96%AD\"><span class=\"toc-text\">索引使用了不等于判断</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%9D%E5%8F%8D%E6%9C%80%E5%B7%A6%E5%8E%9F%E5%88%99\"><span class=\"toc-text\">违反最左原则</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#order-By\"><span class=\"toc-text\">order By</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#group-By\"><span class=\"toc-text\">group By</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#like\"><span class=\"toc-text\">like</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#or\"><span class=\"toc-text\">or</span></a></li></ol></li></ol>","author":{"name":"如峰","slug":"blog-author","avatar":"/logo/logo.jpg","link":"/","description":"程序员的秃头会迟到,但永远不会缺席","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/fgbts"}}}},"mapped":true,"prev_post":{"title":"java开发手册一面向对象","uid":"d1bd2738cb3df5b91e8dbed191b9a6e0","slug":"Java开发手册—面向对象","date":"2022-07-18T15:30:06.000Z","updated":"2022-09-11T02:08:40.988Z","comments":true,"path":"api/articles/Java开发手册—面向对象.json","keywords":null,"cover":"/logo/27524ac7880511ebb6edd017c2d2eca2.jpg","text":"声明此文章根据书籍《码出高效：Java开发手册》整理的读后笔记。仅交流学习使用。 引言面向对象编程(ec -Ori te Programming, OOP)是划时代的编程思想变革，推动了高级语言的快速发展和工业化进程。OOP的抽象、封装、继承、多态的理念使软件大规模化成为可能，有...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"面向对象","slug":"面向对象","count":1,"path":"api/categories/面向对象.json"}],"tags":[{"name":"Java","slug":"Java","count":1,"path":"api/tags/Java.json"}],"author":{"name":"如峰","slug":"blog-author","avatar":"/logo/logo.jpg","link":"/","description":"程序员的秃头会迟到,但永远不会缺席","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/fgbts"}}}},"feature":true},"next_post":{"title":"Mysql索引 - 为什么使用B+树","uid":"2c03d9b1a2276865a0e94d2f6eb59bcd","slug":"Mysql索引为什么使用B+树","date":"2022-06-13T08:30:06.000Z","updated":"2022-11-04T05:56:23.543Z","comments":true,"path":"api/articles/Mysql索引为什么使用B+树.json","keywords":null,"cover":[],"text":"引言通过分析哈希索引、平衡二叉树、B树、B+树来判断Mysql为什么使用B+树。 其中文章中使用的数据结构可视化地址能够更好的帮助大家了解这四种索引方式。 哈希树通过哈希算法计算值的键，以键值对的方式存储数据。 可以看到插入了[0，1，2，3，4，55]，而[3，55]的哈希值相...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"Mysql","slug":"Mysql","count":2,"path":"api/categories/Mysql.json"}],"tags":[{"name":"MySQL","slug":"MySQL","count":2,"path":"api/tags/MySQL.json"}],"author":{"name":"如峰","slug":"blog-author","avatar":"/logo/logo.jpg","link":"/","description":"程序员的秃头会迟到,但永远不会缺席","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/fgbts"}}}}}}